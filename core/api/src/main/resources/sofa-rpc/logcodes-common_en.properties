#总共9位，大分类2，小分类3，具体错误4
#01 启动

##01000 provider
010000001=Publish RPC service: [{0}]
010000002=UnPublish RPC service：[{0}]\tnum: [{1}]
010000003=Start publish RPC service[{0}]
010000004=Stop publish RPC service[{0}]
010000005=The implementation object of service [{0}] is empty
010000006=Service [{0}] is duplicated so it cannot be published
010000007=Publish service metadata failed
010000008=Pre unpublish service metadata failed
010000009=Post unpublish service metadata failed
010000010=Other publish proccess occupy registry file overtime!Check registry file status and delete temp file[{0}] restart process
010000011=Publish SOFA RPC [{0}] service error, please checkout the configuration of service [{1}]
010000012=Unpublish SOFA RPC [{0}] service error, please checkout the configuration of service [{1}]
010000013=Decrypt symmetry token of publisher [{0}] failed
010000014=Duplicate provider config with key [{0}] has been exported more than [{1}] times! Maybe it's wrong config, please check it.
010000015=Duplicate provider config with key [{0}] has been exported [{1}] times! Maybe it's wrong config, please check it. Ignore this if you did that on purpose!
010000016=Catch exception when register processor to server:[{0}]
010000017=Build provider proxy error!
010000018=Provider ref is [{0}] .This is not an instance of [{1}] in provider config with key [{2}] !
010000019=Value of server is not specified in provider config with key [{0}]!
010000020=Catch exception when register to registry: [{0}].
010000021=Catch exception when provider attribute compare.
010000022=Catch exception when provider attribute changed.
010000023=Failed to convert url to provider, the wrong url is:[{0}].
##01001 consumer
010010001=Reference is waiting the addresses of service[{0}]: address-wait-time=[{1}]ms.
010010002=Reference has stopped waiting addresses of service[{0}], it has wait for [{1}]ms.
010010003=Subscribe RPC service: [{0}]
010010004=UnSubscribe RPC service: [{0}]
010010005=Service [{0}] configuration address-wait-time must be positive, otherwise it will reset to maximum: [{1}]
010010006=Cannot subscribe service [{0}], please configure it in governance website
010010007=RpcReferenceBean/RpcServiceBean must has appName, see method: setAppName
010010008=RpcReferenceBean generic service must has generic interface name, please see method: RpcReferenceBean.setGenericInterface
010010009=Subscribe service metadata failed
010010010=UnSubscribe service metadata failed
010010011=MethodSpecial is illegal: [{0}]
010010012=RPC Reference wait service addresses error: [{0}]
010010013=RPC Reference wait service addresses [{0}] cyclically...
010010014=Duplicate consumer config with key [{0}] has been referred more than [{1}] times! Maybe it's wrong config, please check it.
010010015=Build consumer proxy error!
010010016=Catch exception when subscribe from registry: [{0}] but you can ignore if it's called by JVM shutdown hook.
010010017=Catch exception when consumer attribute comparing.
010010018=Catch exception when consumer attribute changed.
010010019=Catch exception when consumer refer after attribute changed.
010010020=Catch exception when build new cluster.
010010021=Catch exception when destroy old cluster.
##01002 dynamic
##01003 ext
010030001=Metrics report error
010030002=Failed to init Tracers
010030003=Error when build filter chain
##01004 listener
##01005 module
010050001=Cannot load RPC module
010050002=Cannot find address handler: [{0}]
010050003=Address handler already exist: [{0}]
010050004=Address handler is null
010050005=Address phase already exist: [{0}]
##01006 registry
010060001=Receive RPC service addresses: service[{0}]\n  usable target addresses[{1}]\n{2}
010060002=Register service address to file cost:[{0}] SEC
010060003=rpc_register_registry_ignore is true, ignore register registry
010060004=LocalFileRegistry failed to read services file
010060005=Cannot get the valid IP address, rpc_enabled_ip_range: [{0}], rpc_bind_network_interface: [{1}].
010060006=Error destroy registry when shutdown,Config:[{0}],but you can ignore if it's called by JVM shutdown hook
##01007 log
##01008 proxy generate
##01009 transmit
010090001=Transmit Manager inited.
010090002=The usable target transmit addresses of dataId[{0}]]:\n{1}
010090003=Parse property of transmit error, default value is empty
010090004=Cannot get the transmit appName, publish transmit dataId failed
010090005=Property of transmit timeout is wrong, default value: [{0}]ms
010090006=Parse property of transmit url error
010090007=Transmit error
##01010 event
010100001=Handle SOFA RPC event error, event type: [{0}], event listener: [{1}]
010100002=Event listener process error: event object is null
##01999 common通用的
019990001=RPC Plugin starting...
019990002=RPC Plugin started.
019990003=Read app [{0}] config
019990004=Read default APP's config: [{0}], value: [{1}]
019990005=Class [{0}] cannot be initialised during binding phase
019990006=Start RPC server failed, listening address: [{0}:{1}]
019990007=Stop RPC server failed
019990008=Shorting exception output error
019990009=RPC server stopped: [{0}]
019990010=Sofa Framework is null, please make sure Sofa Runtime start success
019990011=Cannot load Log4j xml/properties, please check sofa-rpc/config/log4j.xml or sofa-rpc/config/log4j.properties in the directory of Cloudengine plugins or Classpath
019990012=Cannot load rpc-config, please check config/rpc-config.properties in the directory of Cloudengine plugins or Classpath
019990013=ApplicationContext is null while initializing [{0}]
019990014=BundleContext of OSGi is empty, please make sure the application start success
019990015=Register service of OSGi failed
019990016=Unregister service of OSGi failed
019990017=Route service of SOFA RPC is empty, please make sure the application start success
019990018=Start RPC GRPC server failed, listening address: [{0}:{1}]
#02 运行

## 02000 泛化
## 02001 Cluster & invoke & transport
020010001=Invoke SOFA RPC service: [{0}], method: [{1}], arguments num: [{2}]
020010002=Invoke SOFA RPC service: method: [{0}], arguments num: [{1}]
020010003=Invoke SOFA RPC service: [{0}], method: [{1}], cost: [{2,number}]ms, client address: [{3}].\n{4}
020010004=Current thread cannot get ResponseFuture, while using future invoke please be careful on switching classloader
020010005=ThreadLocal has not clear in future mode, please use: SofaResponseFuture.getResponse(timeout, true);
020010006=Parser MethodSpecial of target url: [{0}]
020010007=Failed to load Cluster extension with name [{0}].
## 02002 connectionholder
020020001=Put url to alive list: {0} with channel {1}
020020002=Put url to retry list: {0} with old channel {1}
020020003=Retry connect to {0}
020020004=Reconnected to {0} at channel {1}
020020005=Retry connect to {0} failed > 6 times, remove it from retry list.
020020006=Remove connect {0}
020020007=Get negotiate result of {0}: {1}
020020008=Cannot get socket connect of service [{0}]
020020009=The service addresses [{1}] of service [{0}] is not available,or specify url not exist in providers 
020020010=Cannot get socket connection of service [{0}],Make sure target service is published successfully, and address on local registry file is correct!
020020011=Failed to notify consumer state listener when state change to unavailable,consumer=[{0}]
020020012=Failed to notify consumer state listener when state change to available,consumer=[{0}]
020020013=Update [{0}] provider,providerGroup:[{1}] from list error
020020014=Remove [{0}] provider,providerInfo:[{1}] from list error
020020015=Failed to load ConnectionHolder extension with name [{0}].
## 02003 loadbalancer
020030001=Failed to load LoadBalancer extension with name [{0}].
## 02004 router
## 02005 codec
020050001=Catch error when deserialize header: {0}
020050002=Cannot find class [{0}] while deserializing request
020050003=Cannot find class [{0}] while deserializing response
020050004=Deserialize request: serialization protocol [{0} is illegal.
020050005=Deserialize response: serialization protocol [{0} is illegal.
020050006=[{0}]: cannot find class [{1}] while deserializing, ClassLoader: [{2}]
020050007=Compressor Not Found,code:[{0}].
020050008=Serializer Not Found,type:[{0}].
020050009=Serialize error: [{0}] .
## 02006 addressholder
020060001=Cannot get the service address of service [{0}], please check the registry log.
020060002=Cannot get the service address of service [{0}], please check local Registry file[{1}]
020060003=Failed to load AddressHolder extension with name [{0}].
## 02007 cache
## 02008 context
020080001=Attachment key must start with [{0}] or [{1}].
020080002=Callback handler thread pool has bean exhausted.
## 02009 tracer
020090001=The Stage [{0}],process of [{1}] tracer [{2}] request occur error
020090002=Failed to load Tracers extension with name [{0}].
020090003=Pay attention,stack size error.Tracer consumer stack size more than one.
020090004=Pay attention,stack size error.Tracer provider stack size more than zero.
## 02010 server process
020100001=getServiceMetadata return null, serviceUniqueName: [{0}]
020100002=Cannot found the service: [{0}]
020100003=Cannot load service interface [{0}], please make sure app's classloader can find it
020100004=Cannot found service: [{0}], please make sure [{1}] has publish it
020100005=RPC protocol ({0}), service [{1}], method [{2}]. Exception:\nService target address: [{3}]\nParameters: [{4}]. Reason: timeout exception, please check the server log, cost: [{5}]ms
020100006=RPC protocol ({0}), service [{1}], method [{2}]. Exception:\nParameters: [{3}]. Reason: timeout exception, please check the server log, cost [{4}]ms
020100007=Cannot find the implementation of RPC invoke service: {0}
020100008=RPC thread pool is fulled, reject any new requests. Thread pool stat: \nactiveCount={0},currentPoolSize={1},largestPoolSize={2},corePoolSize={3},maxPoolSize={4},queueSize={5},queueRemainingCapacity={6}
020100009=Server RPC thread pool is fulled, reject any new requests.
020100010=RPC cannot find service: [{0}]
020100011=Cannot find invoke method: [{0}], service: [{1}]
020100012=Execute RPC service [{0}], method [{1}] error, {2}. Client address: [{3}], parameters: [{4}]
020100013=sig[x] [{0}] class not found
020100014=Discard request because consumer has been timeout, service is: [{0}], from: [{1}]
020100015=Discard response because consumer has been timeout, service is: [{0}], from: [{1}]
020100016=Unsupported protocol [{0}] of server!
020100017=Error when get server.
020100018=Error when destroy server with key [{0}].
020100019=Process occurs an unknown error
## 02011 protocol
020110001=Extension Not Found :[{0}].
## 02012 filter
#020120001=Error when build filter chain.
020120002=Next filter and invoker is null!
020120003=Need decode method first!
## 02013 event
## 02014 faulttorenence
020140001=The provider has a higher rate of abnormality in {0} seconds：service name[{1}]; app name[{2}]; invoke count[{3}]; abnormal rate[{4}]; average anomaly rate[{5}]; abnormal provider[{6}]
020140002=Service address exception, but not degraded. The reason is [{0}]; service name[{1}]; abnormal provider[{2}]; app name[{3}]
020140003=Invoke service succeed when retry after failure, last exception is: {0}, invoked addresses is : {1}
020140004=OriginWeight is 0,but is invoked. service [{0}] ;ip[{1}].
020140005=Error when doMeasure: [{0}].
020140006=Error when doRegulate: [{0}].
## 02999 common通用的
029990001=Failed to write services file
## 未知错误
999999999=